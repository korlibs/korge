plugins {
    id("org.jetbrains.kotlin.multiplatform")
    id("org.jetbrains.kotlinx.benchmark") version libs.versions.kotlinx.benchmark
    id("org.jetbrains.kotlin.plugin.allopen") version libs.versions.kotlin
}

allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

kotlin.jvm {
    //-Xskip-prerelease-check
    compilations.configureEach { compilation ->
        //println("initAllTargets: $target - $compilation")
        def options = compilation.compilerOptions.options
        options.suppressWarnings.set(true)
        options.freeCompilerArgs.add("-Xvalue-classes")
        options.freeCompilerArgs.add("-Xskip-prerelease-check")
    }
}
benchmark.targets.register("jvm")
//kotlin { js(IR) { nodejs() } }; benchmark.targets.register("js")

dependencies {
    add("commonMainApi", project(":korim"))
    add("commonMainApi", project(":korge"))
    add("commonMainApi", "org.jetbrains.kotlinx:kotlinx-benchmark-runtime:0.4.7")
}