createProgram() = 1001
getString(35724) = 
createShader(35632) = 2001
shaderSource(2001, """#extension GL_OES_standard_derivatives : enable
#ifdef GL_ES
precision mediump float;
#endif
uniform float u_ProgramType;
uniform vec4 u_Color;
uniform sampler2D u_Tex;
uniform mat4 u_Transform;
uniform vec3 u_Gradientp0;
uniform vec3 u_Gradientp1;
uniform vec4 u_ColorMul;
uniform float u_GlobalAlpha;
uniform float u_GlobalPixelScale;
uniform bool u_OutputPre;
varying float v_Dist;
varying float v_MaxDist;
varying vec2 v_Tex;
void main() {
	vec2 temp3;
	vec4 temp0;
	vec4 temp1;
	vec2 temp4;
	if ((u_ProgramType == 5.0)) {
		gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
		return;
	}
	if ((abs(v_Dist) > v_MaxDist)) {
		discard;
	}
	if ((u_ProgramType == 0.0)) {
		gl_FragColor = u_Color;
	}
	else {
		if ((u_ProgramType == 1.0)) {
			gl_FragColor = texture2D(u_Tex, fract(vec2((u_Transform * vec4(v_Tex, 0.0, 1.0)).xy)));
		}
		else {
			if ((u_ProgramType == 2.0)) {
				gl_FragColor = texture2D(u_Tex, (u_Transform * vec4(v_Tex.x, v_Tex.y, 0.0, 1.0)).xy);
			}
			else {
				if ((u_ProgramType == 3.0)) {
					temp3.xy = (u_Transform * vec4(v_Tex.x, v_Tex.y, 0.0, 1.0)).xy;
					temp0.y = ((2.0 * u_Gradientp0.z) * u_Gradientp1.z);
					temp0.z = pow(u_Gradientp0.z, 2.0);
					temp0.w = pow(u_Gradientp1.z, 2.0);
					temp1.y = (u_Gradientp0.x - u_Gradientp1.x);
					temp1.x = (u_Gradientp0.y - u_Gradientp1.y);
					temp1.z = (u_Gradientp0.z - u_Gradientp1.z);
					temp1.w = (1.0 / ((pow((u_Gradientp0.z - u_Gradientp1.z), 2.0) - pow((u_Gradientp0.x - u_Gradientp1.x), 2.0)) - pow((u_Gradientp0.y - u_Gradientp1.y), 2.0)));
					temp0.x = (1.0 - ((((((-(u_Gradientp1.z)) * temp1.z) + (temp1.y * (u_Gradientp1.x - temp3.x))) + (temp1.x * (u_Gradientp1.y - temp3.y))) - sqrt(((((temp0.w * (pow((u_Gradientp0.x - temp3.x), 2.0) + pow((u_Gradientp0.y - temp3.y), 2.0))) - (temp0.y * (((u_Gradientp0.x - temp3.x) * (u_Gradientp1.x - temp3.x)) + ((u_Gradientp0.y - temp3.y) * (u_Gradientp1.y - temp3.y))))) + (temp0.z * (pow((u_Gradientp1.x - temp3.x), 2.0) + pow((u_Gradientp1.y - temp3.y), 2.0)))) - pow(((((((u_Gradientp1.x * u_Gradientp0.y) - (temp3.x * u_Gradientp0.y)) - (u_Gradientp0.x * u_Gradientp1.y)) + (temp3.x * u_Gradientp1.y)) + (u_Gradientp0.x * temp3.y)) - (u_Gradientp1.x * temp3.y)), 2.0)))) * temp1.w));
					gl_FragColor = texture2D(u_Tex, vec2(temp0.x, 0.0));
				}
				else {
					temp4.xy = (u_Transform * vec4(v_Tex.x, v_Tex.y, 0.0, 1.0)).xy;
					temp0.y = atan((temp4.y - u_Gradientp0.y), (temp4.x - u_Gradientp0.x));
					if ((temp0.y < 0.0)) {
						temp0.y = (temp0.y + 6.2831855);
					}
					temp0.x = (temp0.y / 6.2831855);
					gl_FragColor = texture2D(u_Tex, fract(vec2(temp0.x, 0.0)));
				}
			}
		}
	}
	gl_FragColor = (((gl_FragColor * u_ColorMul) * u_GlobalAlpha) * (1.0 - smoothstep(((v_MaxDist * u_GlobalPixelScale) - 1.5), (v_MaxDist * u_GlobalPixelScale), abs((v_Dist * u_GlobalPixelScale)))));
	if ((!(u_OutputPre))) {
		gl_FragColor.rgb = (gl_FragColor.rgb / gl_FragColor.a);
	}
}
""")
compileShader(2001)
getShaderiv(2001, 35713, [1])
getError() = 0
createShader(35633) = 2002
shaderSource(2002, """#extension GL_OES_standard_derivatives : enable
#ifdef GL_ES
precision mediump float;
#endif
attribute vec2 a_Pos;
attribute float a_Dist;
attribute float a_MaxDist;
uniform mat4 u_ProjMat;
uniform mat4 u_ViewMat;
varying vec2 v_Tex;
varying float v_Dist;
varying float v_MaxDist;
void main() {
	gl_Position = ((u_ProjMat * u_ViewMat) * vec4(a_Pos, 0.0, 1.0));
	v_Tex = a_Pos;
	v_Dist = a_Dist;
	v_MaxDist = a_MaxDist;
}
""")
compileShader(2002)
getShaderiv(2002, 35713, [1])
getError() = 0
bindAttribLocation(1001, 0, "a_Pos")
bindAttribLocation(1001, 5, "a_Dist")
bindAttribLocation(1001, 4, "a_MaxDist")
attachShader(1001, 2001)
attachShader(1001, 2002)
linkProgram(1001)
getProgramiv(1001, 35714, [0])
useProgram(1001)
genBuffers(1, [3001])
bindBuffer(34962, 3001)
bufferData(34962, 160, Buffer(size=160), 35044)
enableVertexAttribArray(0)
vertexAttribPointer(0, 2, 5126, false, 16, 0)
enableVertexAttribArray(5)
vertexAttribPointer(5, 1, 5126, false, 16, 8)
enableVertexAttribArray(4)
vertexAttribPointer(4, 1, 5126, false, 16, 12)
getUniformLocation(1001, "u_ProjMat") = 7001
uniformMatrix4fv(7001, 1, false, [0.0015625, 0, 0, 0, 0, -0.0015625, 0, 0, 0, 0, -1, 0, -1, 0.5625, 0, 1])
getUniformLocation(1001, "u_ViewMat") = 7002
uniformMatrix4fv(7002, 1, false, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1])
getUniformLocation(1001, "u_Tex0") = 7003
activeTexture(33984)
bindTexture(3553, 0)
uniform1iv(7003, 1, [0])
getUniformLocation(1001, "u_Tex1") = 7004
activeTexture(33985)
bindTexture(3553, 0)
uniform1iv(7004, 1, [1])
getUniformLocation(1001, "u_Tex2") = 7005
activeTexture(33986)
bindTexture(3553, 0)
uniform1iv(7005, 1, [2])
getUniformLocation(1001, "u_Tex3") = 7006
activeTexture(33987)
bindTexture(3553, 0)
uniform1iv(7006, 1, [3])
getUniformLocation(1001, "u_OutputPre") = 7007
uniform1iv(7007, 1, [0])
getUniformLocation(1001, "u_ColorMul") = 7008
uniform4fv(7008, 1, [1, 1, 1, 1])
clearStencil(0)
stencilMask(255)
clear(1024)
getUniformLocation(1001, "u_ProgramType") = 7009
uniform1fv(7009, 1, [0])
getUniformLocation(1001, "u_Color") = 7010
uniform4fv(7010, 1, [1, 1, 1, 0.49803922])
getUniformLocation(1001, "u_GlobalAlpha") = 7011
uniform1fv(7011, 1, [1])
getUniformLocation(1001, "u_GlobalPixelScale") = 7012
uniform1fv(7012, 1, [10])
getUniformLocation(1001, "u_Tex") = 7013
activeTexture(33984)
bindTexture(3553, 0)
uniform1iv(7013, 1, [0])
getUniformLocation(1001, "u_InputPre") = 7014
uniform1fv(7014, 1, [0])
uniform1iv(7007, 1, [0])
disable(2960)
stencilMask(0)
colorMask(true, true, true, true)
enable(3042)
blendEquationSeparate(32774, 32774)
blendFuncSeparate(770, 771, 1, 771)
disable(2884)
drawArrays(5, 0, 10)
bindBuffer(34962, 3001)
enableVertexAttribArray(0)
vertexAttribPointer(0, 2, 5126, false, 16, 0)
enableVertexAttribArray(5)
vertexAttribPointer(5, 1, 5126, false, 16, 8)
enableVertexAttribArray(4)
vertexAttribPointer(4, 1, 5126, false, 16, 12)
disable(2884)