createBuffer():0
createBuffer():1
createBuffer():2
createBuffer():3
createBuffer():4
RenderBuffer[0].setSize(1280, 720)
createMainRenderBuffer():0
RenderBuffer[0].set()
clear(#00000000, 1.0, 0, true, true, true)
disposeTemporalPerFrameStuff()
flipInternal()
finish
RenderBuffer[0].set()
clear(#00000000, 1.0, 0, true, true, true)
textureCreate: 1
createTexture():0
Texture[0].uploadedBitmap(SyncBitmapSource(rgba=true, width=1, height=1), 1, 1)
createBuffer():5
Buffer[5].afterSetMem(mem[320])
createBuffer():6
Buffer[6].afterSetMem(mem[40])
createBuffer():7
Buffer[7].afterSetMem(mem[64])
createBuffer():8
Buffer[8].afterSetMem(mem[32])
enable: SCISSOR
scissor: 0, 0, 1280, 720
vaoUse: AGVertexArrayObject(list=[AGVertexData(_buffer=Buffer[8], layout=VertexLayout[a_xy]), AGVertexData(_buffer=Buffer[5], layout=VertexLayout[a_rxy, a_scale, a_rangle, a_axy, a_uv0, a_uv1]), AGVertexData(_buffer=Buffer[6], layout=VertexLayout[a_colMul]), AGVertexData(_buffer=Buffer[7], layout=VertexLayout[a_texId])])
uboSet:
uboSet.uniform: Uniform(u_ProjMat) = AGValue[TFLOAT]([[0.0015625, 0, 0, 0, 0, -0.0027777778, 0, 0, 0, 0, -1, 0, -1, 1, 0, 1]])
uboSet.uniform: Uniform(u_ViewMat) = AGValue[TFLOAT]([[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]])
uboSet.uniform: Uniform(u_Tex0) = AGValue[TINT]([[0]])
uboSet.uniform: Uniform(u_Tex1) = AGValue[TINT]([[1]])
uboSet.uniform: Uniform(u_Tex2) = AGValue[TINT]([[2]])
uboSet.uniform: Uniform(u_Tex3) = AGValue[TINT]([[3]])
uboSet.uniform: Uniform(u_OutputPre) = AGValue[TBOOL]([[0]])
uboSet.uniform: Uniform(u_texSize0) = AGValue[TFLOAT]([[1, 1]])
uboSet.uniform: Uniform(u_texSize1) = AGValue[TFLOAT]([[0, 0]])
uboSet.uniform: Uniform(u_texSize2) = AGValue[TFLOAT]([[0, 0]])
uboSet.uniform: Uniform(u_texSize3) = AGValue[TFLOAT]([[0, 0]])
uboSet.uniform: Uniform(u_texSize4) = AGValue[TFLOAT]([[0, 0]])
enable: BLEND
blendEquation: ADD, ADD
blendFunction: SOURCE_ALPHA, ONE_MINUS_SOURCE_ALPHA, ONE, ONE_MINUS_SOURCE_ALPHA
disable: CULL_FACE
depthMask: true
depthRange: 0.0, 1.0
disable: DEPTH
colorMask: true, true, true, true
disable: STENCIL
stencilMask: 0
draw: TRIANGLE_FAN, offset=0, count=4, instances=10, indexType=null
::draw.indices: [0, 1, 2, 3]
::draw.attributes[0]: []
::draw.vertex[0]: 
::draw.vertex[1]: 
::draw.vertex[2]: 
::draw.vertex[3]: 
vaoUse: AGVertexArrayObject(list=[AGVertexData(_buffer=Buffer[8], layout=VertexLayout[a_xy]), AGVertexData(_buffer=Buffer[5], layout=VertexLayout[a_rxy, a_scale, a_rangle, a_axy, a_uv0, a_uv1]), AGVertexData(_buffer=Buffer[6], layout=VertexLayout[a_colMul]), AGVertexData(_buffer=Buffer[7], layout=VertexLayout[a_texId])])
Buffer[5].afterSetMem(mem[0])
disposeTemporalPerFrameStuff()
flipInternal()
finish