name: DEPLOY

on:
  push:
    tags:
      - 'v*'

env:
  CI: true
  FORCED_VERSION: ${{ github.ref }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPEUSERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPEPASSWORD }}

jobs:
  create-staging-repo:
    runs-on: ubuntu-latest
    outputs:
      stagedRepositoryId: ${{ steps.createStagedRepositoryId.outputs.stagedRepositoryId }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: sudo apt-get install xvfb
      - id: createStagedRepositoryId
        run: xvfb-run --auto-servernum ./gradlew --no-daemon startReleasingMavenCentral

  publish-windows:
    runs-on: windows-latest
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: CALL gradlew.bat --no-daemon checkReleasingMavenCentral publishMingwX64PublicationToMavenRepository
        shell: cmd
        env:
          DISABLE_JAVASCRIPT_TEST: true
          GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=1
  publish-mac:
    runs-on: macos-11
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: ./gradlew checkReleasingMavenCentral
      - run: ./gradlew publishMacosX64PublicationToMavenRepository publishMacosArm64PublicationToMavenRepository
        env:
          DISABLE_JAVASCRIPT_TEST: true
  publish-ios:
    runs-on: macos-11
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: ./gradlew checkReleasingMavenCentral
      - run: ./gradlew publishIosArm64PublicationToMavenRepository publishIosX64PublicationToMavenRepository publishIosSimulatorArm64PublicationToMavenRepository
        env:
          DISABLE_JAVASCRIPT_TEST: true
  publish-tvos:
    runs-on: macos-11
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: ./gradlew checkReleasingMavenCentral
      - run: ./gradlew publishTvosX64PublicationToMavenRepository publishTvosArm64PublicationToMavenRepository publishTvosSimulatorArm64PublicationToMavenRepository
        env:
          DISABLE_JAVASCRIPT_TEST: true
  publish-watchos:
    runs-on: macos-11
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: ./gradlew checkReleasingMavenCentral
      - run: ./gradlew publishWatchosX64PublicationToMavenRepository publishWatchosArm64PublicationToMavenRepository publishWatchosSimulatorArm64PublicationToMavenRepository
        env:
          DISABLE_JAVASCRIPT_TEST: true
  publish-jvm-multiplatform:
    runs-on: ubuntu-latest
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: sudo apt-get install xvfb
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon checkReleasingMavenCentral
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon publishKotlinMultiplatformPublicationToMavenRepository publishJvmPublicationToMavenRepository
  publish-js-android:
    runs-on: ubuntu-latest
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: sudo apt-get install xvfb
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon checkReleasingMavenCentral
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon publishJsPublicationToMavenRepository publishAndroidPublicationToMavenRepository
  publish-linux:
    runs-on: ubuntu-latest
    needs: [create-staging-repo]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: sudo apt-get install xvfb
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon checkReleasingMavenCentral
      - run: xvfb-run --auto-servernum ./gradlew --no-daemon publishLinuxX64PublicationToMavenRepository

  publish-finalize:
    runs-on: ubuntu-latest
    needs: [publish-windows, publish-mac, publish-linux, publish-ios, publish-jvm-multiplatform, publish-js-android, publish-tvos, publish-watchos]
    env:
      stagedRepositoryId: ${{needs.create-staging-repo.outputs.stagedRepositoryId}}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: ./gradlew releaseMavenCentral
