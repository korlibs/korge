name: TEST

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CI: true
  SKIP_KORGE_SAMPLES: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      testJvm: ${{ steps.filter.outputs.jvm == 'true' || steps.filter.outputs.all == 'true' }}
      testJs: ${{ steps.filter.outputs.js == 'true' || steps.filter.outputs.all == 'true' }}
      testAndroid: ${{ steps.filter.outputs.android == 'true' || steps.filter.outputs.all == 'true' }}
      testWindows: ${{ steps.filter.outputs.windows == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.all == 'true' }}
      testWindowsE2e: ${{ steps.filter.outputs.windows == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.jvm == 'true' || steps.filter.outputs.all == 'true' }}
      testLinux: ${{ steps.filter.outputs.linux == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.all == 'true' }}
      testLinuxE2e: ${{ steps.filter.outputs.linux == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.jvm == 'true' || steps.filter.outputs.all == 'true' }}
      testMacos: ${{ steps.filter.outputs.macos == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.all == 'true' }}
      testMacosE2e: ${{ steps.filter.outputs.macos == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.jvm == 'true' || steps.filter.outputs.all == 'true' }}
      testIos: ${{ steps.filter.outputs.ios == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.all == 'true' }}
      testIosE2e: ${{ steps.filter.outputs.ios == 'true' || steps.filter.outputs.native == 'true' || steps.filter.outputs.jvm == 'true' || steps.filter.outputs.all == 'true' }}
    steps:
      - uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            all:
              - '.github/workflows/TEST.yml'
              - '**/build.gradle'
              - '**/build.gradle.kts'
              - '**/settings.gradle'
              - '**/settings.gradle.kts'
              - '**/buildSrc/**'
              - '**/gradle/**'
              - '**/src/common*Main/**'
              - '**/src/common*Test/**'
            jvm:
              - '**/src/jvm*Main/**'
              - '**/src/jvm*Test/**'
              - '**/src/concurrent*Main/**'
              - '**/src/concurrent*Test/**'
            android:
              - '**/AndroidManifest.xml'
              - '**/src/android*Main/**'
              - '**/src/android*Test/**'
              - '**/src/jvmAndroidMain/**'
              - '**/src/jvmAndroidTest/**'
              - '**/src/concurrent*Main/**'
              - '**/src/concurrent*Test/**'
              - '**/src/main/**'
            js:
              - '**/src/js*Main/**'
              - '**/src/js*Test/**'
            native:
              - '**/src/native*Main/*.kt'
              - '**/src/native*Test/*.kt'
              - '**/src/concurrent*Main/**'
              - '**/src/concurrent*Test/**'
            windows:
              - '**/src/mingw*Main/*.kt'
              - '**/src/mingw*Test/*.kt'
            linux:
              - '**/src/linux*Main/*.kt'
              - '**/src/linux*Test/*.kt'
              - '**/src/posix*Main/*.kt'
              - '**/src/posix*Test/*.kt'
            macos:
              - '**/src/macos*Main/*.kt'
              - '**/src/macos*Test/*.kt'
              - '**/src/darwin*Main/*.kt'
              - '**/src/darwin*Test/*.kt'
              - '**/src/posix*Main/*.kt'
              - '**/src/posix*Test/*.kt'
            ios:
              - '**/src/ios*Main/*.kt'
              - '**/src/ios*Test/*.kt'
              - '**/src/tvos*Main/*.kt'
              - '**/src/tvos*Test/*.kt'
              - '**/src/watchos*Main/*.kt'
              - '**/src/watchos*Test/*.kt'
              - '**/src/darwin*Main/*.kt'
              - '**/src/darwin*Test/*.kt'
              - '**/src/posix*Main/*.kt'
              - '**/src/posix*Test/*.kt'

  test-jvm:
    needs: changes
    if: ${{ needs.changes.outputs.testJvm == 'true' }}
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
    - { uses: actions/checkout@v3 }
    - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
    - { name: Install freeglut3 & openal, run: sudo apt-get update && sudo apt-get -y install freeglut3-dev libopenal-dev }
    - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
    - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
    - { name: Start gradle, run: ./gradlew }
    - { name: Testing JVM, run: ./gradlew jvmTest }
    - { name: Check sandbox compiles, run: "./gradlew :korge-sandbox:jvmJar" }

  test-js:
    needs: changes
    if: ${{ needs.changes.outputs.testJs == 'true' }}
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Install freeglut3 & openal, run: sudo apt-get update && sudo apt-get -y install freeglut3-dev libopenal-dev }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      - { name: Testing NodeJS, run: ./gradlew jsNodeTest }
      - { name: Testing Browser, run: ./gradlew jsBrowserTest }

  test-android:
    needs: changes
    if: ${{ needs.changes.outputs.testAndroid == 'true' }}
    timeout-minutes: 120
    #runs-on: macos-11
    runs-on: ubuntu-latest
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      #- { name: Install freeglut3 & openal, run: sudo apt-get update && sudo apt-get -y install freeglut3-dev libopenal-dev }
      #- { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      #- { name: Try building Android, run: ./gradlew publishAndroidPublicationToMavenLocal }
      - name: Run Android Connected Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 21
          script: ./gradlew connectedCheck

  test-native-linux:
    needs: changes
    if: ${{ needs.changes.outputs.testLinux == 'true' }}
    timeout-minutes: 120
    runs-on: ubuntu-latest
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Install freeglut3 & openal, run: sudo apt-get update && sudo apt-get -y install freeglut3-dev libopenal-dev }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      - { name: Testing Kotlin/Native Linux, run: ./gradlew --no-daemon linuxX64Test }

  test-native-macos:
    needs: changes
    if: ${{ needs.changes.outputs.testMacos == 'true' }}
    timeout-minutes: 120
    runs-on: macos-11
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      - { name: Testing Kotlin/Native MacosX64, run: ./gradlew macosX64Test publishMacosArm64PublicationToMavenLocal }

  test-native-ios:
    needs: changes
    if: ${{ needs.changes.outputs.testIos == 'true' }}
    timeout-minutes: 120
    runs-on: macos-11
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      - { name: Check compilation of iOS targets, run: ./gradlew publishIosArm64PublicationToMavenLocal publishIosArm32PublicationToMavenLocal publishIosX64PublicationToMavenLocal }

  test-native-ios-simulator:
    needs: changes
    if: ${{ needs.changes.outputs.testIosE2e == 'true' }}
    timeout-minutes: 120
    runs-on: macos-11
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      #- { name: Run ios simulator tests, run: ./gradlew iosX64Test iosSimulatorArm64Test }
      - { name: Run ios simulator tests, run: ./gradlew iosX64Test }

  test-native-macos-e2e:
    needs: changes
    if: ${{ needs.changes.outputs.testMacosE2e == 'true' }}
    timeout-minutes: 120
    runs-on: macos-11
    steps:
      - { uses: actions/checkout@v3 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Grant execute permission for gradlew, run: chmod +x gradlew }
      - { name: Start gradle, run: ./gradlew }
      - { name: Publishing, run: ./gradlew --no-daemon publishJvmLocal publishMacosX64PublicationToMavenLocal }
      - { name: e2e test, working-directory: e2e-test, run: ./gradlew runJvmCheckReferences }

  test-native-windows:
    needs: changes
    if: ${{ needs.changes.outputs.testWindows == 'true' }}
    timeout-minutes: 120
    runs-on: windows-latest
    env:
      DISABLE_JAVASCRIPT_TEST: true
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=3
    steps:
      - { uses: actions/checkout@v1 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { name: Testing Kotlin/Native MingwX64Test, shell: cmd, run: CALL gradlew.bat --no-daemon mingwX64Test }

  test-native-windows-e2e:
    needs: changes
    if: ${{ needs.changes.outputs.testWindowsE2e == 'true' }}
    timeout-minutes: 120
    runs-on: windows-latest
    env:
      DISABLE_JAVASCRIPT_TEST: true
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=3
    steps:
      - { uses: actions/checkout@v1 }
      - { name: Set up JDK 1.8, uses: actions/setup-java@v1, with: { java-version: 1.8 } }
      - { name: Gradle cache, uses: ./.github/actions/gradle-cache }
      - { run: CALL gradlew.bat --no-daemon publishJvmLocal publishMingwX64PublicationToMavenLocal, shell: cmd }
      - { name: e2e test, shell: cmd, working-directory: e2e-test, run: CALL gradlew.bat --no-daemon jvmTest runJvmCheckReferences }
